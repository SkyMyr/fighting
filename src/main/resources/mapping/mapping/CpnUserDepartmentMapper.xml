<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qcby.dao.CpnUserDepartmentMapper">
  <resultMap id="BaseResultMap" type="com.qcby.entity.CpnUserDepartment">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="department_id" jdbcType="BIGINT" property="department_id" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_at" jdbcType="BIGINT" property="create_at" />
    <result column="update_at" jdbcType="BIGINT" property="update_at" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="user_name" jdbcType="VARCHAR" property="user_name" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="sms_status" jdbcType="TINYINT" property="sms_status" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
  </resultMap>
  <sql id="Base_Column_List">
    id, department_id, status, create_at, update_at, mobile, user_name, email, sms_status, 
    gender
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cpn_user_department
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from cpn_user_department
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.qcby.entity.CpnUserDepartment">
    insert into cpn_user_department (id, department_id, status, 
      create_at, update_at, mobile, 
      user_name, email, sms_status, 
      gender)
    values (#{id,jdbcType=BIGINT}, #{department_id,jdbcType=BIGINT}, #{status,jdbcType=TINYINT}, 
      #{create_at,jdbcType=BIGINT}, #{update_at,jdbcType=BIGINT}, #{mobile,jdbcType=VARCHAR}, 
      #{user_name,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{sms_status,jdbcType=TINYINT}, 
      #{gender,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qcby.entity.CpnUserDepartment">
    insert into cpn_user_department
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="department_id != null">
        department_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="create_at != null">
        create_at,
      </if>
      <if test="update_at != null">
        update_at,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="user_name != null">
        user_name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="sms_status != null">
        sms_status,
      </if>
      <if test="gender != null">
        gender,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="department_id != null">
        #{department_id,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="create_at != null">
        #{create_at,jdbcType=BIGINT},
      </if>
      <if test="update_at != null">
        #{update_at,jdbcType=BIGINT},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="user_name != null">
        #{user_name,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="sms_status != null">
        #{sms_status,jdbcType=TINYINT},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qcby.entity.CpnUserDepartment">
    update cpn_user_department
    <set>
      <if test="department_id != null and department_id != ''">
        department_id = #{department_id,jdbcType=BIGINT},
      </if>
      <if test="status != null and status != ''">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="create_at != null and create_at != ''">
        create_at = #{create_at,jdbcType=BIGINT},
      </if>
      <if test="update_at != null and update_at != ''">
        update_at = #{update_at,jdbcType=BIGINT},
      </if>
      <if test="mobile != null and mobile != ''">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="user_name != null and user_name != ''">
        user_name = #{user_name,jdbcType=VARCHAR},
      </if>
      <if test="email != null and email != ''">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="sms_status != null and sms_status != ''">
        sms_status = #{sms_status,jdbcType=TINYINT},
      </if>
      <if test="gender != null and gender != ''">
        gender = #{gender,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qcby.entity.CpnUserDepartment">
    update cpn_user_department
    set department_id = #{department_id,jdbcType=BIGINT},
      status = #{status,jdbcType=TINYINT},
      create_at = #{create_at,jdbcType=BIGINT},
      update_at = #{update_at,jdbcType=BIGINT},
      mobile = #{mobile,jdbcType=VARCHAR},
      user_name = #{user_name,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      sms_status = #{sms_status,jdbcType=TINYINT},
      gender = #{gender,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>